(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./src/public/js/pages/singleTicket.js":
/*!*********************************************!*\
  !*** ./src/public/js/pages/singleTicket.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\r\n      .                              .o8                     oooo\r\n   .o8                             \"888                     `888\r\n .o888oo oooo d8b oooo  oooo   .oooo888   .ooooo.   .oooo.o  888  oooo\r\n   888   `888\"\"8P `888  `888  d88' `888  d88' `88b d88(  \"8  888 .8P'\r\n   888    888      888   888  888   888  888ooo888 `\"Y88b.   888888.\r\n   888 .  888      888   888  888   888  888    .o o.  )88b  888 `88b.\r\n   \"888\" d888b     `V88V\"V8P' `Y8bod88P\" `Y8bod8P' 8\"\"888P' o888o o888o\r\n ========================================================================\r\n Created:    02/10/2015\r\n Author:     Chris Brame\r\n\r\n **/\r\n\r\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n  __webpack_require__(/*! jquery */ \"./src/public/js/vendor/jquery/jquery.js\"),\r\n  __webpack_require__(/*! underscore */ \"./src/public/js/vendor/underscore/underscore.js\"),\r\n  __webpack_require__(/*! modules/socket */ \"./src/public/js/modules/socket.js\"),\r\n  __webpack_require__(/*! tomarkdown */ \"./src/public/js/vendor/tomarkdown/tomarkdown.js\"),\r\n  __webpack_require__(/*! modules/helpers */ \"./src/public/js/modules/helpers.js\"),\r\n  __webpack_require__(/*! jquery_custom */ \"./src/public/js/plugins/jquery.custom.js\")\r\n], __WEBPACK_AMD_DEFINE_RESULT__ = (function ($, _, socketClient, md, helpers) {\r\n  var st = {}\r\n  st.init = function (callback) {\r\n    $(document).ready(function () {\r\n      socketClient.chat.updateOnlineBubbles()\r\n\r\n      helpers.setupTruTabs($('.tru-tab-selectors').find('.tru-tab-selector'))\r\n\r\n      $('.off-canvas-bottom').DivResizer({})\r\n\r\n      $('.issue-body img:not(.hasLinked)').each(function () {\r\n        setupImageLink(this)\r\n      })\r\n\r\n      $('.comment-body img:not(.hasLinked)').each(function () {\r\n        setupImageLink(this)\r\n      })\r\n\r\n      function setupImageLink (el) {\r\n        var $this = $(el)\r\n        var src = $this.attr('src')\r\n        $this.addClass('hasLinked')\r\n        var a = $('<a>')\r\n          .addClass('no-ajaxy')\r\n          .attr('href', src)\r\n          .attr('target', '_blank')\r\n        $this.wrap(a)\r\n      }\r\n\r\n      $('.remove-attachment').each(function () {\r\n        var self = $(this)\r\n        self.off('click', onRemoveAttachmentClick)\r\n        self.on('click', onRemoveAttachmentClick)\r\n      })\r\n      $('.remove-comment').each(function () {\r\n        var self = $(this)\r\n        self.off('click', onRemoveCommentClick)\r\n        self.on('click', onRemoveCommentClick)\r\n      })\r\n      // $('.edit-comment').each(function () {\r\n      //   var self = $(this)\r\n      //   self.off('click', onEditCommentClick)\r\n      //   self.on('click', onEditCommentClick)\r\n      // })\r\n      $('.remove-note').each(function () {\r\n        var self = $(this)\r\n        self.off('click', onRemoveNoteClick)\r\n        self.on('click', onRemoveNoteClick)\r\n      })\r\n      // $('.edit-note').each(function () {\r\n      //   var self = $(this)\r\n      //   self.off('click', onEditNoteClick)\r\n      //   self.on('click', onEditNoteClick)\r\n      // })\r\n      // $('.edit-issue').each(function () {\r\n      //   var self = $(this)\r\n      //   self.off('click', onEditIssueClick)\r\n      //   self.on('click', onEditIssueClick)\r\n      // })\r\n\r\n      // Setup Text\r\n      var issueText = $('.issue-text')\r\n        .find('div.issue-body')\r\n        .html()\r\n      if (!_.isUndefined(issueText)) {\r\n        issueText = md(issueText)\r\n        issueText = issueText.trim()\r\n        $('#issueText').val(issueText)\r\n      }\r\n\r\n      // Set Comment Editing\r\n      var editCommentForm = $('div.edit-comment-form')\r\n      editCommentForm.find('form').each(function (idx, f) {\r\n        var form = $(f)\r\n        form.unbind('submit')\r\n        form.submit(function ($event) {\r\n          $event.preventDefault()\r\n          if (!form.isValid(null, null, false)) return true\r\n          var id = $('#__ticketId').html()\r\n          if (id.length > 0) {\r\n            var comment = $($event.currentTarget)\r\n              .find('textarea#commentText')\r\n              .val()\r\n            var commentId = $($event.currentTarget).attr('data-commentId')\r\n\r\n            socketClient.ui.setCommentText(id, commentId, comment)\r\n          }\r\n        })\r\n      })\r\n\r\n      editCommentForm.find('.resetForm').each(function (idx, item) {\r\n        var button = $(item)\r\n        button.off('click')\r\n        button.on('click', function ($event) {\r\n          $event.preventDefault()\r\n\r\n          var grandParent = button.parents('div.edit-comment-form')\r\n          var comment = button.parents('div.ticket-comment').find('.comment-body')\r\n\r\n          if (grandParent.length > 0) {\r\n            grandParent.addClass('hide')\r\n            comment.removeClass('hide')\r\n          }\r\n        })\r\n      })\r\n\r\n      // Setup Internal Note Editing\r\n      var editNoteForm = $('div.edit-note-form')\r\n      editNoteForm.find('form').each(function (idx, f) {\r\n        var form = $(f)\r\n        form.off('submit')\r\n        form.on('submit', function ($event) {\r\n          $event.preventDefault()\r\n          if (!form.isValid(null, null, false)) return true\r\n          var id = $('#__ticketId').text()\r\n          if (id.length > 0) {\r\n            var note = $($event.currentTarget)\r\n              .find('textarea#noteText')\r\n              .val()\r\n            var noteId = $($event.currentTarget).attr('data-noteId')\r\n\r\n            socketClient.ui.setNoteText(id, noteId, note)\r\n          }\r\n        })\r\n      })\r\n\r\n      editNoteForm.find('.resetForm').each(function (idx, item) {\r\n        var button = $(item)\r\n        button.off('click')\r\n        button.on('click', function ($event) {\r\n          $event.preventDefault()\r\n\r\n          var grandParent = button.parents('div.edit-note-form')\r\n          var note = button.parents('div.ticket-note').find('.comment-body')\r\n\r\n          if (grandParent.length > 0) {\r\n            grandParent.addClass('hide')\r\n            note.removeClass('hide')\r\n          }\r\n        })\r\n      })\r\n\r\n      if (typeof callback === 'function') {\r\n        return callback()\r\n      }\r\n    })\r\n  }\r\n\r\n  function onRemoveAttachmentClick (e) {\r\n    var self = $(e.currentTarget)\r\n    if (_.isUndefined(self)) {\r\n      return true\r\n    }\r\n\r\n    var ticketId = $('#__ticketId').html()\r\n    var attachmentId = self.attr('data-attachmentId')\r\n    if (attachmentId.length > 0 && ticketId.length > 0) {\r\n      $.ajax({\r\n        url: '/api/v1/tickets/' + ticketId + '/attachments/remove/' + attachmentId,\r\n        type: 'DELETE',\r\n        success: function () {\r\n          socketClient.ui.refreshTicketAttachments(ticketId)\r\n        },\r\n        error: function (err) {\r\n          var res = err.responseJSON\r\n          console.log('[trudesk:singleTicket:onRemoveAttachmentClick] - ' + res.error)\r\n          // helpers.showFlash(res.error, true);\r\n          helpers.UI.showSnackbar(res.err, true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  function onRemoveCommentClick (e) {\r\n    var self = $(e.currentTarget)\r\n    if (_.isUndefined(self)) {\r\n      return true\r\n    }\r\n\r\n    var ticketId = $('#__ticketId').html()\r\n    var commentId = self.attr('data-commentId')\r\n    if (commentId.length > 0 && ticketId.length > 0) {\r\n      socketClient.ui.removeComment(ticketId, commentId)\r\n    }\r\n  }\r\n\r\n  function onEditCommentClick (e) {\r\n    var self = $(e.currentTarget)\r\n    if (_.isUndefined(self)) {\r\n      return true\r\n    }\r\n\r\n    var commentId = self.attr('data-commentId')\r\n    if (commentId.length > 0) {\r\n      var commentForm = $('.edit-comment-form[data-commentid=\"' + commentId + '\"]')\r\n      if (commentForm.length < 1) return true\r\n      var commentText = $('.ticket-comment[data-commentid=\"' + commentId + '\"]')\r\n        .find('.issue-text')\r\n        .find('.comment-body')\r\n\r\n      // Setup Text\r\n      var commentHtml = commentText.html()\r\n      if (!_.isUndefined(commentHtml)) {\r\n        // commentHtml = commentHtml.replace(/(<br>)|(<br \\/>)|(<p>)|(<\\/p>)/g, \"\\r\\n\");\r\n        // commentHtml = commentHtml.replace(/(<([^>]+)>)/ig,\"\");\r\n        commentHtml = commentHtml.trim()\r\n        commentHtml = md(commentHtml)\r\n        commentForm.find('textarea').val(commentHtml)\r\n      }\r\n\r\n      commentText.addClass('hide')\r\n      commentForm.removeClass('hide')\r\n    }\r\n  }\r\n\r\n  function onEditNoteClick (e) {\r\n    var self = $(e.currentTarget)\r\n    if (_.isUndefined(self)) {\r\n      return true\r\n    }\r\n\r\n    var noteId = self.attr('data-noteId')\r\n    if (noteId.length > 0) {\r\n      var noteForm = $('.edit-note-form[data-noteid=\"' + noteId + '\"]')\r\n      if (noteForm.length < 1) return true\r\n      var noteText = $('.ticket-note[data-noteid=\"' + noteId + '\"]')\r\n        .find('.issue-text')\r\n        .find('.comment-body')\r\n\r\n      // Setup Text\r\n      var noteHtml = noteText.html()\r\n      if (!_.isUndefined(noteHtml)) {\r\n        noteHtml = noteHtml.trim()\r\n        noteHtml = md(noteHtml)\r\n        noteForm.find('textarea').val(noteHtml)\r\n      }\r\n\r\n      noteText.addClass('hide')\r\n      noteForm.removeClass('hide')\r\n    }\r\n  }\r\n\r\n  function onRemoveNoteClick (e) {\r\n    var self = $(e.currentTarget)\r\n    if (_.isUndefined(self)) {\r\n      return true\r\n    }\r\n\r\n    var ticketId = $('#__ticketId').html()\r\n    var noteId = self.attr('data-noteid')\r\n    if (noteId.length > 0 && ticketId.length > 0) {\r\n      socketClient.ui.removeNote(ticketId, noteId)\r\n    }\r\n  }\r\n\r\n  function onEditIssueClick () {\r\n    var issueForm = $('.edit-issue-form')\r\n    var issueText = $('.initial-issue')\r\n      .find('.issue-text')\r\n      .find('.issue-body')\r\n\r\n    if (!issueText.hasClass('hide')) {\r\n      issueText.addClass('hide')\r\n      issueForm.removeClass('hide')\r\n    }\r\n  }\r\n\r\n  return st\r\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\n\n//# sourceURL=webpack:///./src/public/js/pages/singleTicket.js?");

/***/ })

}]);